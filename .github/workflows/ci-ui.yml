name: CI/CD for UI - Checkout, Build and Test for ai-reviewer-admin

on:
  pull_request:
    types: [opened, reopened, synchronize]
    paths:
      - "src/frontend/ai-reviewer-admin/**"
      - ".github/workflows/ci-ui.yml"

jobs:
  yarn:
    env:
      FILE_COUNTER: 0
      ACTION_DEBUG: true

    name: CI/CD for UI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set required env vars for yarn coverage
      - name: Set required env vars for yarn coverage
        run:  cp src/frontend/ai-reviewer-admin/.env.template src/frontend/ai-reviewer-admin/.env

      # Figure out where yarn is caching things
      - name: Yarn Cache
        run: yarn cache dir

      # Implement Caching Action for Yarn Project
      - name: Cache node modules
        uses: actions/cache@v4.2.3
        env:
          cache-name: cache-node-modules
        with:
          # YARN cache files are stored in `/home/runner/.cache/yarn/v6` on git actions
          path: /home/runner/.cache/yarn/v6
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      # Run Yarn Install - AI Reviewer Admin Client
      - name: Run Yarn Install - AI Reviewer Admin
        run: yarn --cwd src/frontend/ai-reviewer-admin install

      # Build - AI Reviewer Admin Client
      - name: Build - AI Reviewer Admin
        run: yarn --cwd src/frontend/ai-reviewer-admin build --production=true
        
      # Run lint - AI Reviewer Admin Client
      - name: Run lint - AI Reviewer Admin
        run: yarn --cwd src/frontend/ai-reviewer-admin run lint

      # Yarn Coverage - AI Reviewer Admin Client
      - name: Run Yarn Coverage - AI Reviewer Admin
        run: yarn --cwd src/frontend/ai-reviewer-admin coverage
