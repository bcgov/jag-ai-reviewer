apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: ${COMPONENT_NAME}
  description: Deployment template for the Mongo-Express
  
labels:
  app: ${COMPONENT_NAME}
  app.kubernetes.io/part-of: ${APP_NAME}
  
parameters:

- name: APP_NAME
  description: The application name that each component is part of
  required: false
  value: mongodb

- name: COMPONENT_NAME
  description: The application name
  required: false
  value: mongo-express
  
- name: OC_NAMESPACE
  description: The OpenShift namespace prefix
  required: false
  value: fc726a
  
- name: OC_ENV
  description: The OpenShift environment, ie dev, test or prod
  required: true

- name: DNS
  description: Openshift route default DNS
  required: false
  value: apps.silver.devops.gov.bc.ca
  
objects:

- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    name: ${COMPONENT_NAME}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
    labels:
      app: ${COMPONENT_NAME}
      app.kubernetes.io/part-of: ${APP_NAME}
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
      resources: {}
      activeDeadlineSeconds: 21600
    triggers:
      - type: ConfigChange
      - type: ImageChange
        imageChangeParams:
          automatic: true
          containerNames:
            - ${COMPONENT_NAME}
          from:
            kind: ImageStreamTag
            namespace: ${OC_NAMESPACE}-${OC_ENV}
            name: ${COMPONENT_NAME}:latest
    replicas: 0
    revisionHistoryLimit: 10
    test: false
    selector:
      app: ${COMPONENT_NAME}
      deploymentconfig: ${COMPONENT_NAME}
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: ${COMPONENT_NAME}
          deploymentconfig: ${COMPONENT_NAME}
      spec:
        containers:
          - name: ${COMPONENT_NAME}
            image: >-
              image-registry.openshift-image-registry.svc:5000/${OC_NAMESPACE}-${OC_ENV}/${COMPONENT_NAME}:latest
            ports:
              - containerPort: 8081
                protocol: TCP
            env:
              - name: ME_CONFIG_MONGODB_SERVER
                valueFrom:
                  secretKeyRef:
                    name: ${COMPONENT_NAME}
                    key: ME_CONFIG_MONGODB_SERVER
              - name: ME_CONFIG_MONGODB_ADMINUSERNAME
                valueFrom:
                  secretKeyRef:
                    name: ${COMPONENT_NAME}
                    key: ME_CONFIG_MONGODB_ADMINUSERNAME
              - name: ME_CONFIG_MONGODB_ADMINPASSWORD
                valueFrom:
                  secretKeyRef:
                    name: ${COMPONENT_NAME}
                    key: ME_CONFIG_MONGODB_ADMINPASSWORD
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler

- apiVersion: v1
  kind: Service
  metadata:
    name: ${COMPONENT_NAME}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
    labels:
      app: ${COMPONENT_NAME}
  spec:
    ports:
      - name: 8081-tcp
        protocol: TCP
        port: 8081
        targetPort: 8081
    selector:
      app: ${COMPONENT_NAME}
      deploymentconfig: ${COMPONENT_NAME}
    type: ClusterIP
    sessionAffinity: None

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    name: ${COMPONENT_NAME}
    namespace: ${OC_NAMESPACE}-${OC_ENV}
    labels:
      app: ${COMPONENT_NAME}
  spec:
    host: ${COMPONENT_NAME}-${OC_NAMESPACE}-${OC_ENV}.${DNS}
    to:
      kind: Service
      name: ${COMPONENT_NAME}
      weight: 100
    port:
      targetPort: 8081-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: None
    wildcardPolicy: None
