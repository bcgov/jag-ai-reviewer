version: "3.7"
services:

  #############################################################################################
  ###                                 AI REVIEWER ADMIN CLIENT                              ###
  #############################################################################################
  ai-reviewer-admin:
    container_name: ai-reviewer-admin
    build:
      context: ./src/frontend/ai-reviewer-admin
    ports:
      - 3002:8080
    environment:
      - REACT_APP_AI_REVIEWER_API_URL=http://localhost:8090/
      - REACT_APP_KEYCLOAK_REALM=${KEYCLOAK_REALM:-ai-reviewer}
      - REACT_APP_KEYCLOAK_CLIENT_ID=ai-reviewer-ui
      - REACT_APP_KEYCLOAK_URL=${KEYCLOAK_URL:-http://localhost:8081/auth}

  #############################################################################################
  ###                           AI Reviewer backend app                                ###
  #############################################################################################
  ai-reviewer-api:
    container_name: ai-reviewer-api
    hostname: ai-reviewer-api
    build:
      context: ./src/backend
      dockerfile: Dockerfile.ai-reviewer-api
      args:
        - SKIP_TESTS=true
        - MVN_PROFILE=${MVN_PROFILE:-ai-reviewer}
        - STARTERS_V=v1.0.4
    ports:
      - "8090:8080"
    environment:
      - DILIGEN_BASE_PATH=${DILIGEN_BASE_PATH:-http://ai-reviewer-mock-api:1337}
      - DILIGEN_USERNAME=${DILIGEN_USERNAME}
      - DILIGEN_PASSWORD=${DILIGEN_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=admin
      - AIR_SPRING_DATA_MONGODB_HOST=mongodb
      - CLAMAV_HOST=clamav
      - CLAMAV_PORT=3310
      - CLAMAV_TIMEOUT=50000
      - KEYCLOAK_REALM_SERVER_URL=${KEYCLOAK_REALM_SERVER_URL:-http://keycloak:8080/auth/realms/ai-reviewer}
      - KEYCLOAK_AUTH_SERVER_URL=${KEYCLOAK_AUTH_SERVER_URL:-http://keycloak:8080/auth}
      - KEYCLOAK_REALM=${KEYCLOAK_REALM:-ai-reviewer}
      - KEYCLOAK_RESOURCE=${KEYCLOAK_RESOURCE:-ai-reviewer-api}
      - KEYCLOAK_CREDENTIALS_SECRET=${KEYCLOAK_CREDENTIALS_SECRET}
      - KEYCLOAK_SSL_REQUIRED=${KEYCLOAK_SSL_REQUIRED:-none}
      - CSO_ORDS_ENDPOINT=${CSO_ORDS_ENDPOINT:-http://ai-reviewer-mock-api:1337}
      - CSO_ORDS_USERNAME=${CSO_ORDS_USERNAME}
      - CSO_ORDS_PASSWORD=${CSO_ORDS_PASSWORD}
      - FEATURE_USE_REDIS_QUEUE=${FEATURE_USE_REDIS_QUEUE}

  #############################################################################################
  ###                           AI Reviewer Mock Service                                    ###
  #############################################################################################
  ai-reviewer-mock-api:
    container_name: ai-reviewer-mock-api
    hostname: ai-reviewer-mock-api
    build:
      context: ./src/backend
      dockerfile: Dockerfile.ai-reviewer-mock-api
      args:
        - SKIP_TESTS=true
        - MVN_PROFILE=${MVN_PROFILE:-ai-reviewer-mock}
        - STARTERS_V=v1.0.0
    ports:
      - "1337:1337"

  #############################################################################################
  ###                             CLAMAV                                                    ###
  #############################################################################################
  clamav:
    image: mk0x/docker-clamav
    ports:
      - "3310:3310"



  #############################################################################################
  ###                                 REDIS SERVER                                          ###
  #############################################################################################
  redis:
    container_name: redis
    image: redis
    command: redis-server --requirepass admin
    #command: redis-server
    ports:
      - "6379:6379"
    volumes:
      - data-redis:/data
    restart: always

  #############################################################################################
  ###                                 REDIS COMMANDER                                       ###
  #############################################################################################
  redis-commander:
    container_name: redis-commander
    hostname: redis-commander
    image: rediscommander/redis-commander:latest
    restart: always
    environment:
      - REDIS_PORT=6379
      - REDIS_HOST=redis
      - REDIS_PASSWORD=admin
    ports:
      - "8082:8081"

  ##############################################################################################
  ####                                        KEYCLOAK                                       ###
  ##############################################################################################
  keycloak:
    image: quay.io/keycloak/keycloak:legacy
    environment:
      DB_VENDOR: H2
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/realm-export.json
      KEYCLOAK_FRONTEND_URL: http://localhost:8081/auth
    volumes:
      - ./infrastructure/keycloak/realm-export.json:/tmp/realm-export.json
    ports:
      - 8081:8080

  # #############################################################################################
  # ###                                        KEYCLOAK Config                                ###
  # #############################################################################################
  keycloak-config:
    command: sh -c "dockerize -wait http://keycloak:8080 -timeout 300s /tmp/createuser.sh"

  #############################################################################################
  ###                             MONGO DB                                                  ###
  #############################################################################################
  mongodb:
    image: 'mongo:latest'
    container_name: 'mongodb'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-admin}
    volumes:
      - mongo-volume:/data/db
    ports:
      - 27017:27017

  mongo-express:
    image: 'mongo-express'
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-admin}
    ports:
      - 8001:8081

    
volumes:
  data-redis:
    driver: local
  mongo-volume:
